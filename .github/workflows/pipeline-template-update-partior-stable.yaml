on:
  workflow_call:
    inputs:
      TARGET-REFERENCE: 
        description: The tag or reference to use
        required: true
        type: string
      SKIP-APPROVAL:
        description: Flag to skip approval
        required: false
        type: boolean
        default: false

jobs:
  workflow-approval:
    if: inputs.SKIP-APPROVAL == false
    name: Workflow Approval - ${{ inputs.TARGET-REFERENCE }}
    environment: "PARTIOR-STABLE"
    runs-on: ubuntu-latest
    steps:
      - name: Approving Workflow to move partior-stable tag
        run: |
          echo "Running workflow-approval.."
          requestorID=${GITHUB_ACTOR}
          approverID=$(curl -s -L -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GH_REPO_READER_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}/approvals | jq -r .[].user.login)
          
          echo "[INFO] Requestor: $requestorID"
          echo "[INFO] Approver: $approverID"

          if [[ "$requestorID" == "$approverID" ]]; then
            echo "[ERROR] Approver conflict protection. Approver cannot be the requestor."
            exit 1
          fi

  update-tag:
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    needs: [ workflow-approval ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/create-github-app-token@v1
      id: app-token
      with:
        app-id: ${{ vars.BOT_APP_ID }}
        private-key: ${{ secrets.BOT_APP_KEY }}

    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ steps.app-token.outputs.token }}

    - name: Git config
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com

    - name: Tag new target
      id: new-tag
      run: |
        tagWithDate=partior-stable-$(date +%Y%m%d_%H%M%S)
        echo "tag-with-date=$tagWithDate" >> $GITHUB_OUTPUT
        git tag -f partior-stable ${{ inputs.TARGET-REFERENCE }}
        git tag -f $tagWithDate ${{ inputs.TARGET-REFERENCE }}

    - name: Push new tag
      run: |
        git push origin partior-stable --force
        git push origin ${{ steps.new-tag.outputs.tag-with-date }} --force